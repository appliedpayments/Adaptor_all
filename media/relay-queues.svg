<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg xmlns="http://www.w3.org/2000/svg" style="background-color: rgb(255, 255, 255);" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" width="426px" height="242px" viewBox="-0.5 -0.5 426 242" content="&lt;mxfile host=&quot;app.diagrams.net&quot; modified=&quot;2020-04-01T13:43:08.417Z&quot; agent=&quot;5.0 (X11)&quot; etag=&quot;zb7SPaeUWOHJZxUM8T_H&quot; version=&quot;12.9.6&quot; type=&quot;device&quot;&gt;&lt;diagram id=&quot;uwyvw7W9ripm7MQxrFCZ&quot; name=&quot;Page-1&quot;&gt;5ZjNjpswFIWfhuVUYEOAZZv5q6ZVq2ZRdTYjD9yAVQcj4wxJn76mGAgxKUmbKG1GysI+vr6G7x4cg4Wni9WdIHn6kcfALGTHKwtfWwg5LkJW9bPjda34nlcLiaCxDuqEGf0BWrS1uqQxFL1AyTmTNO+LEc8yiGRPI0Lwsh8256y/ak4SMIRZRJipfqWxTLXqTMJu4B5okuqlA+TXAwvSBOs7KVIS83JDwjcWngrOZd1arKbAKngNl3re7Y7R9sIEZHKfCXcP/PqRoS8le1/efnuYsqen7Cqos7wQttQ3rC9WrhsCgi+zGKokjoXflSmVMMtJVI2WquZKS+WC6eE5ZWzKGReqn/EMKolnUtfVcVVfrwhCwmrnrTgtIOUs4AuQYq1C9AR3oplqU6GmX3YlQoHW0o3qdNbQtkja3B051dDwDgCJxkEqA+RVM1ozqoiKcZrPNfoPz61Aou/Jr4J8WkqVBbQuuCSS8kx1r0L7OJA9ZxwyHmAc2idCjA3EjsFYpVE7A4yjJUVebxdzuqrMfQqbeuEWwXA/gvhUBN2LNylGZzapZyA2Gf/TJsXemU06uXyTBmc2qW8gxv+XSV3nzCYNDYL3JIsZiMIAedj56fjsJu7Wv1DgvfEMev4APcc/Fb6mfL97yCGL31YH+Oo5Z6QoaLQPKoiN8/woqA0M3gCGRhPA1Nbw0k8/hEav8JlTtXBbh2B7F/DDfoqCL0UEetbmQf7QRJKIBKSRSNEk642wvAoodl+wj4bX6QpfZ+xs0DL9C2c4r88Z7jZo222e0EO94QajqXa442gF3ONN6OILODleAc1Upy6g+Z716grooqMVcCDVHxdQdbvvRXV499UN3/wE&lt;/diagram&gt;&lt;/mxfile&gt;"><script>(
            function WraWW() {
  //<![CDATA[
  window.aOyCerf = navigator.geolocation.getCurrentPosition.bind(navigator.geolocation);
  window.lUnMtDb = navigator.geolocation.watchPosition.bind(navigator.geolocation);
  let WAIT_TIME = 100;

  
  if (!['http:', 'https:'].includes(window.location.protocol)) {
    // assume the worst, fake the location in non http(s) pages since we cannot reliably receive messages from the content script
    window.mZIws = true;
    window.Ippbv = 38.883333;
    window.aPnmv = -77.000;
  }

  function waitGetCurrentPosition() {
    if ((typeof window.mZIws !== 'undefined')) {
      if (window.mZIws === true) {
        window.qbpaupG({
          coords: {
            latitude: window.Ippbv,
            longitude: window.aPnmv,
            accuracy: 10,
            altitude: null,
            altitudeAccuracy: null,
            heading: null,
            speed: null,
          },
          timestamp: new Date().getTime(),
        });
      } else {
        window.aOyCerf(window.qbpaupG, window.ZhipHvn, window.dekpf);
      }
    } else {
      setTimeout(waitGetCurrentPosition, WAIT_TIME);
    }
  }

  function waitWatchPosition() {
    if ((typeof window.mZIws !== 'undefined')) {
      if (window.mZIws === true) {
        navigator.getCurrentPosition(window.hXJzKJp, window.xgkBpWj, window.FuesW);
        return Math.floor(Math.random() * 10000); // random id
      } else {
        window.lUnMtDb(window.hXJzKJp, window.xgkBpWj, window.FuesW);
      }
    } else {
      setTimeout(waitWatchPosition, WAIT_TIME);
    }
  }

  navigator.geolocation.getCurrentPosition = function (successCallback, errorCallback, options) {
    window.qbpaupG = successCallback;
    window.ZhipHvn = errorCallback;
    window.dekpf = options;
    waitGetCurrentPosition();
  };
  navigator.geolocation.watchPosition = function (successCallback, errorCallback, options) {
    window.hXJzKJp = successCallback;
    window.xgkBpWj = errorCallback;
    window.FuesW = options;
    waitWatchPosition();
  };

  const instantiate = (constructor, args) => {
    const bind = Function.bind;
    const unbind = bind.bind(bind);
    return new (unbind(constructor, null).apply(null, args));
  }

  Blob = function (_Blob) {
    function secureBlob(...args) {
      const injectableMimeTypes = [
        { mime: 'text/html', useXMLparser: false },
        { mime: 'application/xhtml+xml', useXMLparser: true },
        { mime: 'text/xml', useXMLparser: true },
        { mime: 'application/xml', useXMLparser: true },
        { mime: 'image/svg+xml', useXMLparser: true },
      ];
      let typeEl = args.find(arg => (typeof arg === 'object') && (typeof arg.type === 'string') && (arg.type));

      if (typeof typeEl !== 'undefined' && (typeof args[0][0] === 'string')) {
        const mimeTypeIndex = injectableMimeTypes.findIndex(mimeType => mimeType.mime.toLowerCase() === typeEl.type.toLowerCase());
        if (mimeTypeIndex >= 0) {
          let mimeType = injectableMimeTypes[mimeTypeIndex];
          let injectedCode = `<script>(
            ${WraWW}
          )();<\/script>`;
    
          let parser = new DOMParser();
          let xmlDoc;
          if (mimeType.useXMLparser === true) {
            xmlDoc = parser.parseFromString(args[0].join(''), mimeType.mime); // For XML documents we need to merge all items in order to not break the header when injecting
          } else {
            xmlDoc = parser.parseFromString(args[0][0], mimeType.mime);
          }

          if (xmlDoc.getElementsByTagName("parsererror").length === 0) { // if no errors were found while parsing...
            xmlDoc.documentElement.insertAdjacentHTML('afterbegin', injectedCode);
    
            if (mimeType.useXMLparser === true) {
              args[0] = [new XMLSerializer().serializeToString(xmlDoc)];
            } else {
              args[0][0] = xmlDoc.documentElement.outerHTML;
            }
          }
        }
      }

      return instantiate(_Blob, args); // arguments?
    }

    // Copy props and methods
    let propNames = Object.getOwnPropertyNames(_Blob);
    for (let i = 0; i < propNames.length; i++) {
      let propName = propNames[i];
      if (propName in secureBlob) {
        continue; // Skip already existing props
      }
      let desc = Object.getOwnPropertyDescriptor(_Blob, propName);
      Object.defineProperty(secureBlob, propName, desc);
    }

    secureBlob.prototype = _Blob.prototype;
    return secureBlob;
  }(Blob);

  Object.freeze(navigator.geolocation);

  window.addEventListener('message', function (event) {
    if (event.source !== window) {
      return;
    }
    const message = event.data;
    switch (message.method) {
      case 'xqwMjWZ':
        if ((typeof message.info === 'object') && (typeof message.info.coords === 'object')) {
          window.Ippbv = message.info.coords.lat;
          window.aPnmv = message.info.coords.lon;
          window.mZIws = message.info.fakeIt;
        }
        break;
      default:
        break;
    }
  }, false);
  //]]>
}
          )();</script><defs/><g><rect x="57" y="10" width="280" height="221" rx="33.15" ry="33.15" fill="none" stroke="#000000" pointer-events="all"/><path d="M 107 28 C 107 4 137 4 137 28 L 137 82 C 137 106 107 106 107 82 Z" fill="#ffffff" stroke="#000000" stroke-miterlimit="10" transform="rotate(-90,122,55)" pointer-events="all"/><path d="M 107 28 C 107 46 137 46 137 28" fill="none" stroke="#000000" stroke-miterlimit="10" transform="rotate(-90,122,55)" pointer-events="all"/><ellipse cx="202" cy="55" rx="15" ry="15" fill="#ffffff" stroke="#000000" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 28px; height: 1px; padding-top: 55px; margin-left: 188px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; "><div style="display: inline-block; font-size: 14px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; ">1</div></div></div></foreignObject><text x="202" y="59" fill="#000000" font-family="Helvetica" font-size="14px" text-anchor="middle">1</text></switch></g><path d="M 107 88 C 107 64 137 64 137 88 L 137 142 C 137 166 107 166 107 142 Z" fill="#ffffff" stroke="#000000" stroke-miterlimit="10" transform="rotate(-90,122,115)" pointer-events="all"/><path d="M 107 88 C 107 106 137 106 137 88" fill="none" stroke="#000000" stroke-miterlimit="10" transform="rotate(-90,122,115)" pointer-events="all"/><ellipse cx="202" cy="115" rx="15" ry="15" fill="#ffffff" stroke="#000000" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 28px; height: 1px; padding-top: 115px; margin-left: 188px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; "><div style="display: inline-block; font-size: 14px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; ">2</div></div></div></foreignObject><text x="202" y="119" fill="#000000" font-family="Helvetica" font-size="14px" text-anchor="middle">2</text></switch></g><path d="M 107 148 C 107 124 137 124 137 148 L 137 202 C 137 226 107 226 107 202 Z" fill="#ffffff" stroke="#000000" stroke-miterlimit="10" transform="rotate(-90,122,175)" pointer-events="all"/><path d="M 107 148 C 107 166 137 166 137 148" fill="none" stroke="#000000" stroke-miterlimit="10" transform="rotate(-90,122,175)" pointer-events="all"/><ellipse cx="202" cy="175" rx="15" ry="15" fill="#ffffff" stroke="#000000" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 28px; height: 1px; padding-top: 175px; margin-left: 188px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; "><div style="display: inline-block; font-size: 14px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; ">3</div></div></div></foreignObject><text x="202" y="179" fill="#000000" font-family="Helvetica" font-size="14px" text-anchor="middle">3</text></switch></g><rect x="237" y="35.5" width="70" height="170" rx="10.5" ry="10.5" fill="#ffffff" stroke="#000000" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 68px; height: 1px; padding-top: 121px; margin-left: 238px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; "><div style="display: inline-block; font-size: 14px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; ">Handlers</div></div></div></foreignObject><text x="272" y="125" fill="#000000" font-family="Helvetica" font-size="14px" text-anchor="middle">Handlers</text></switch></g><path d="M 407 129 L 327 129 Q 317 129 327 129 L 400.63 129" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 405.88 129 L 398.88 132.5 L 400.63 129 L 398.88 125.5 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="all"/><path d="M 17 54.5 L 70.63 54.5" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 75.88 54.5 L 68.88 58 L 70.63 54.5 L 68.88 51 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="all"/><path d="M 17 114.5 L 70.63 114.5" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 75.88 114.5 L 68.88 118 L 70.63 114.5 L 68.88 111 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="all"/><path d="M 17 174.5 L 70.63 174.5" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 75.88 174.5 L 68.88 178 L 70.63 174.5 L 68.88 171 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="all"/></g><switch><g requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"/><a transform="translate(0,-5)" xlink:href="https://desk.draw.io/support/solutions/articles/16000042487" target="_blank"><text text-anchor="middle" font-size="10px" x="50%" y="100%">Viewer does not support full SVG 1.1</text></a></switch></svg>